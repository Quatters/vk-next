{"version":3,"sources":["static/js/api-calls.js","static/js/CurrentUserContext.js","static/js/NotificationContext.js","static/js/validators.js","components/EditPasswordModal.jsx","components/ConfirmModal.jsx","components/Header.jsx","static/img/default-avatar.png","components/EditAvatarModal.jsx","components/Avatar.jsx","components/AddPost.jsx","components/AvatarSmall.jsx","components/Post.jsx","components/PostContainer.jsx","components/EditNameModal.jsx","components/EditAboutModal.jsx","components/UserInfo.jsx","routes/PersonalPage.jsx","components/Sidebar.jsx","components/LoginForm.jsx","components/LoginInfo.jsx","routes/SignIn.jsx","components/RegistrationForm.jsx","routes/SignUp.jsx","components/UserSmall.jsx","components/UserContainer.jsx","components/UserSearch.jsx","routes/Users.jsx","components/Notification.jsx","routes/Home.jsx","App.js","index.js"],"names":["apiUrl","process","getUsers","limit","offset","query","a","axios","get","response","getUser","login","postsLimit","changeAbout","about","put","name","surname","changeAvatar","avatar","oldPassword","newPassword","body","fromUser","toUserLogin","post","avatarBase64","id","delete","password","userInfo","signOut","CurrentUserContext","createContext","currentUser","refreshCurrentUser","NotificationContext","showNotification","errorCode","message","header","nameIsCorrect","length","test","passwordIsCorrect","EditPasswordModal","useState","show","setShow","setOldPassword","setNewPassword","repeatNewPassword","setRepeatNewPassword","wrongOldPassword","setWrongOldPassword","wrongNewPassword","setWrongNewPassword","passwordsDontMatch","setPasswordsDontMatch","passwordsAreTheSame","setPasswordsAreTheSame","isRequestCompleted","setIsRequestCompleted","useContext","handleClose","Nav","Link","to","className","onClick","Modal","onHide","Header","closeButton","Title","Body","Form","Group","Label","Control","type","onChange","e","target","value","Text","Footer","Button","variant","newPasswordIsCorrect","newPasswordsMatch","newAndOldAreDifferent","allIsCorrect","changePassword","then","catch","error","status","finally","disabled","Spinner","animation","as","size","ConfirmModal","props","buttonVariant","style","buttonStyle","openButtonText","title","text","confirmAction","history","useHistory","push","Navbar","bg","expand","Container","Brand","Toggle","aria-controls","Collapse","Item","textDecoration","padding","margin","outline","EditAvatarModal","wrongFileFormat","setWrongFileFormat","image","setImage","convertIntoBase64","file","imageFile","Promise","resolve","reject","reader","FileReader","onloadend","result","readAsDataURL","width","src","preview","alt","onDrop","URL","createObjectURL","accept","icon","faUndo","Avatar","canEdit","setCanEdit","useEffect","user","Card","Img","defaultAvatar","AddPost","input","setInput","placeholder","setPlaceholder","inputHeight","setInputHeight","pathArray","location","pathname","split","getLoginFromPath","FormControl","height","resize","overflow","event","scrollHeight","trim","createPost","AvatarSmall","borderRadius","cursor","objectFit","Post","showRemoveConfirmation","setShowRemoveConfirmation","handleRedirect","handleRemovePost","setTimeout","removePost","_id","setHasMoreData","moment","locale","fromNowDuring","format","added","CloseButton","whiteSpace","PostContainer","posts","map","item","EditNameModal","setName","setSurname","wrongName","setWrongName","wrongSurname","setWrongSurname","faEdit","isCorrect","surnameIsCorrect","changeName","EditAboutModal","setAbout","autoFocus","UserInfo","PersonalPage","setUser","requestIsCompleted","setRequestIsCompleted","setLimit","hasMoreData","toLowerCase","replace","data","totalPostsLength","Col","sm","md","dataLength","next","loadUser","hasMore","scrollThreshold","loader","Sidebar","LoginForm","setLogin","setPassword","wrongCredentials","setWrongCredentials","signIn","LoginInfo","SignIn","lg","RegistrationForm","repeatPassword","setRepeatPassword","wrongLogin","setWrongLogin","wrongPassword","setWrongPassword","loginIsTaken","setLoginIsTaken","validator","loginIsCorrect","passwordsMatch","signUp","SignUp","UserSmall","UserContainer","users","UserSearch","interval","setInterval","clearInterval","currentInterval","onSearch","Users","setUsers","loadUsers","totalUsers","Notification","Toast","onClose","toggleShow","headerText","Home","require","config","defaults","withCredentials","App","setCurrentUser","userRequestCompleted","setUserRequestCompleted","notificationShowed","setNotificationShowed","notificationText","setNotificationText","notificationHeader","setNotificationHeader","showErrorNotification","Provider","ToastContainer","zIndex","position","Row","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c509d28.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst apiUrl =\r\n  process.env.NODE_ENV === 'production'\r\n    ? process.env.REACT_APP_API_URL\r\n    : 'http://localhost:3001';\r\n\r\nexport async function getUsers(limit, offset, query) {\r\n  limit = limit || 0;\r\n  offset = offset || 0;\r\n  query = query || '';\r\n\r\n  const response = await axios.get(\r\n    apiUrl +\r\n      '/api/users' +\r\n      '?limit=' +\r\n      limit +\r\n      '&offset=' +\r\n      offset +\r\n      '&find=' +\r\n      query\r\n  );\r\n  return response;\r\n}\r\n\r\nexport async function getUser(login, postsLimit) {\r\n  postsLimit = postsLimit || 0;\r\n\r\n  const response = await axios.get(\r\n    apiUrl + '/api/users/' + login + '?limit=' + postsLimit\r\n  );\r\n  return response;\r\n}\r\n\r\nexport async function changeAbout(about, login) {\r\n  const response = await axios.put(\r\n    apiUrl + '/api/users/' + login + '?type=about',\r\n    { about }\r\n  );\r\n  return response;\r\n}\r\n\r\nexport async function changeName(name, surname, login) {\r\n  const response = await axios.put(\r\n    apiUrl + '/api/users/' + login + '?type=name',\r\n    { name, surname }\r\n  );\r\n  return response;\r\n}\r\n\r\nexport async function changeAvatar(avatar, login) {\r\n  const response = await axios.put(\r\n    apiUrl + '/api/users/' + login + '?type=avatar',\r\n    { avatar }\r\n  );\r\n  return response;\r\n}\r\n\r\nexport async function changePassword(oldPassword, newPassword, login) {\r\n  const response = await axios.put(\r\n    apiUrl + '/api/users/' + login + '/?type=password',\r\n    { oldPassword, newPassword }\r\n  );\r\n  return response;\r\n}\r\n\r\nexport async function createPost(body, fromUser, toUserLogin) {\r\n  const response = await axios.post(\r\n    apiUrl + '/api/users/' + toUserLogin + '/posts',\r\n    {\r\n      name: fromUser.name,\r\n      surname: fromUser.surname,\r\n      avatarBase64: fromUser.avatarBase64,\r\n      login: fromUser.login,\r\n      body,\r\n    }\r\n  );\r\n  return response;\r\n}\r\n\r\nexport async function removePost(id, login) {\r\n  const response = await axios.delete(\r\n    apiUrl + '/api/users/' + login + '/posts/' + id\r\n  );\r\n  return response;\r\n}\r\n\r\nexport async function signIn(login, password) {\r\n  const response = await axios.post(apiUrl + '/api/login', {\r\n    login,\r\n    password,\r\n  });\r\n  return response;\r\n}\r\n\r\nexport async function signUp(userInfo) {\r\n  const response = await axios.post(apiUrl + '/api/register', {\r\n    login: userInfo.login,\r\n    password: userInfo.password,\r\n    name: userInfo.name,\r\n    surname: userInfo.surname,\r\n  });\r\n  return response;\r\n}\r\n\r\nexport async function signOut() {\r\n  const response = axios.get(apiUrl + '/api/logout');\r\n  return response;\r\n}\r\n","import { createContext } from 'react';\r\n\r\nconst CurrentUserContext = createContext({\r\n  currentUser: null,\r\n  refreshCurrentUser: limit => {},\r\n});\r\n\r\nexport default CurrentUserContext;\r\n","import { createContext } from 'react';\r\n\r\nconst NotificationContext = createContext({\r\n  showNotification: (errorCode, message, header) => {},\r\n});\r\n\r\nexport default NotificationContext;\r\n","export function nameIsCorrect(name) {\r\n  return name.length > 0 && /^[a-zа-я-]+$/i.test(name);\r\n}\r\n\r\nexport function loginIsCorrect(login) {\r\n  return login.length >= 4 && /^[a-z0-9-]+$/i.test(login);\r\n}\r\n\r\nexport function passwordIsCorrect(password) {\r\n  return password.length >= 4;\r\n}\r\n","import { Fragment, React, useState, useContext } from 'react';\r\nimport { Modal, Button, Form, Spinner, Nav } from 'react-bootstrap';\r\nimport { changePassword } from '../static/js/api-calls';\r\nimport CurrentUserContext from '../static/js/CurrentUserContext';\r\nimport NotificationContext from '../static/js/NotificationContext';\r\nimport { passwordIsCorrect } from '../static/js/validators';\r\n\r\nexport default function EditPasswordModal() {\r\n  const [show, setShow] = useState(false);\r\n  const [oldPassword, setOldPassword] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [repeatNewPassword, setRepeatNewPassword] = useState('');\r\n\r\n  const [wrongOldPassword, setWrongOldPassword] = useState(false);\r\n  const [wrongNewPassword, setWrongNewPassword] = useState(false);\r\n  const [passwordsDontMatch, setPasswordsDontMatch] = useState(false);\r\n  const [passwordsAreTheSame, setPasswordsAreTheSame] = useState(false);\r\n  const [isRequestCompleted, setIsRequestCompleted] = useState(true);\r\n\r\n  const { currentUser, refreshCurrentUser } = useContext(CurrentUserContext);\r\n  const { showNotification } = useContext(NotificationContext);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  function handleConfirm() {\r\n    if (allIsCorrect()) {\r\n      setIsRequestCompleted(false);\r\n      changePassword(oldPassword, newPassword, currentUser?.login)\r\n        .then(response => {\r\n          showNotification(null, 'Password has been changed.', 'Success');\r\n          handleClose();\r\n        })\r\n        .catch(error => {\r\n          if (error.response?.status === 403) showNotification(403);\r\n          else if (error.response?.status === 401) showNotification(401);\r\n          else if (error.response?.status === 404) setWrongOldPassword(true);\r\n          else {\r\n            showNotification();\r\n          }\r\n        })\r\n        .finally(() => {\r\n          setIsRequestCompleted(true);\r\n          refreshCurrentUser();\r\n        });\r\n    }\r\n  }\r\n\r\n  function allIsCorrect() {\r\n    const newPasswordIsCorrect = passwordIsCorrect(newPassword);\r\n    const newPasswordsMatch = newPassword === repeatNewPassword;\r\n    const newAndOldAreDifferent = newPassword !== oldPassword;\r\n\r\n    setWrongNewPassword(!newPasswordIsCorrect);\r\n    setPasswordsDontMatch(!newPasswordsMatch);\r\n    setPasswordsAreTheSame(!newAndOldAreDifferent);\r\n    setWrongOldPassword(!oldPassword);\r\n\r\n    return (\r\n      newPasswordIsCorrect &&\r\n      newPasswordsMatch &&\r\n      newAndOldAreDifferent &&\r\n      oldPassword\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Nav.Link to='/users' className='nav-link p-0' onClick={handleShow}>\r\n        Change password\r\n      </Nav.Link>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Change password</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group className='mb-3 mt-0'>\r\n              <Form.Label>Old password</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                onChange={e => setOldPassword(e.target.value)}\r\n              />\r\n              {wrongOldPassword && (\r\n                <Form.Text className='text-danger'>Wrong password</Form.Text>\r\n              )}\r\n            </Form.Group>\r\n            <Form.Group className='mb-3'>\r\n              <Form.Label>New password</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                onChange={e => setNewPassword(e.target.value)}\r\n              />\r\n              {wrongNewPassword && (\r\n                <Form.Text className='text-danger'>\r\n                  At least 4 symbols\r\n                </Form.Text>\r\n              )}\r\n              {passwordsAreTheSame && !wrongNewPassword && (\r\n                <Form.Text className='text-danger'>\r\n                  New and old passwords are the same\r\n                </Form.Text>\r\n              )}\r\n            </Form.Group>\r\n            <Form.Group className='mb-3'>\r\n              <Form.Label>Repeat new password</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                onChange={e => setRepeatNewPassword(e.target.value)}\r\n              />\r\n              {passwordsDontMatch && (\r\n                <Form.Text className='text-danger'>\r\n                  Passwords don't match\r\n                </Form.Text>\r\n              )}\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant='secondary' onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            variant='primary'\r\n            onClick={handleConfirm}\r\n            disabled={!isRequestCompleted}\r\n          >\r\n            {isRequestCompleted ? (\r\n              'Confirm'\r\n            ) : (\r\n              <Spinner animation='border' as='span' size='sm' />\r\n            )}\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n}\r\n","import { Fragment, React, useState } from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\n\r\nexport default function ConfirmModal(props) {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  function handleConfirm() {\r\n    handleClose();\r\n    props.confirmAction();\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Button\r\n        variant={props.buttonVariant ?? 'primary'}\r\n        style={props.buttonStyle}\r\n        onClick={handleShow}\r\n      >\r\n        {props.openButtonText}\r\n      </Button>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{props.title ?? 'Confirm action'}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{props.text}</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant='secondary' onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant='primary' onClick={handleConfirm}>\r\n            Confirm\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n}\r\n","import { React, useContext } from 'react';\r\nimport { Navbar, Container, Nav } from 'react-bootstrap';\r\nimport EditPasswordModal from './EditPasswordModal';\r\nimport { Link } from 'react-router-dom';\r\nimport '../static/css/shared.css';\r\nimport CurrentUserContext from '../static/js/CurrentUserContext';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { signOut } from '../static/js/api-calls';\r\nimport ConfirmModal from './ConfirmModal';\r\n\r\nexport default function Header() {\r\n  const { currentUser, refreshCurrentUser } = useContext(CurrentUserContext);\r\n  const history = useHistory();\r\n\r\n  async function handleSignOut() {\r\n    await signOut();\r\n    refreshCurrentUser();\r\n    history.push('/signin');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Navbar bg='light' expand='md'>\r\n        <Container>\r\n          <Navbar.Brand className='ms-3'>VK Next</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls='navbarScroll' />\r\n          <Navbar.Collapse className='pt-md-0 pt-2'>\r\n            <Link to='/me' className='nav-link show-on-sm'>\r\n              My page\r\n            </Link>\r\n            <Link to='/users' className='nav-link show-on-sm'>\r\n              Users\r\n            </Link>\r\n            <div className='ms-auto ps-3 py-2'>\r\n              {currentUser && <EditPasswordModal />}\r\n            </div>\r\n            {currentUser ? (\r\n              <Nav.Item className='show-on-sm'>\r\n                <div className='d-flex'>\r\n                  <ConfirmModal\r\n                    openButtonText='Sign Out'\r\n                    text='Are you sure you want to leave your account?'\r\n                    confirmAction={handleSignOut}\r\n                    buttonVariant={'link'}\r\n                    buttonStyle={{\r\n                      textDecoration: 'none',\r\n                      padding: '1rem',\r\n                      margin: '0',\r\n                      outline: 'none !important',\r\n                    }}\r\n                  />\r\n                </div>\r\n              </Nav.Item>\r\n            ) : (\r\n              <Nav.Item className='show-on-sm'>\r\n                <LinkContainer to='/signin'>\r\n                  <Nav.Link>Sign In</Nav.Link>\r\n                </LinkContainer>\r\n              </Nav.Item>\r\n            )}\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/default-avatar.522560c8.png\";","import { Fragment, React, useState, useContext } from 'react';\r\nimport { Modal, Button, Spinner } from 'react-bootstrap';\r\nimport { StyledDropZone } from 'react-drop-zone';\r\nimport 'react-drop-zone/dist/styles.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUndo } from '@fortawesome/free-solid-svg-icons';\r\nimport { changeAvatar } from '../static/js/api-calls';\r\nimport CurrentUserContext from '../static/js/CurrentUserContext';\r\nimport NotificationContext from '../static/js/NotificationContext';\r\n\r\nexport default function EditAvatarModal(props) {\r\n  const [show, setShow] = useState(false);\r\n  const [wrongFileFormat, setWrongFileFormat] = useState(false);\r\n  const [image, setImage] = useState(null);\r\n  const { currentUser, refreshCurrentUser } = useContext(CurrentUserContext);\r\n  const { showNotification } = useContext(NotificationContext);\r\n  const [isRequestCompleted, setIsRequestCompleted] = useState(true);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  async function handleConfirm() {\r\n    setIsRequestCompleted(false);\r\n    const base64 = await convertIntoBase64(image.file);\r\n    changeAvatar(base64, currentUser.login)\r\n      .then(response => {\r\n        handleClose();\r\n      })\r\n      .catch(error => {\r\n        if (error.response?.status === 403) showNotification(403);\r\n        else if (error.response?.status === 401) showNotification(401);\r\n        else showNotification();\r\n      })\r\n      .finally(() => {\r\n        setIsRequestCompleted(true);\r\n        handleClose();\r\n        refreshCurrentUser();\r\n      });\r\n  }\r\n\r\n  function handleClearAvatar() {\r\n    setIsRequestCompleted(false);\r\n    changeAvatar('', currentUser.login)\r\n      .then(response => {\r\n        refreshCurrentUser();\r\n      })\r\n      .catch(error => {\r\n        if (error.response?.status === 403) showNotification(403);\r\n        else if (error.response?.status === 401) showNotification(401);\r\n        else showNotification();\r\n      })\r\n      .finally(() => {\r\n        setIsRequestCompleted(true);\r\n        refreshCurrentUser();\r\n        handleClose();\r\n      });\r\n  }\r\n\r\n  function handleUpload(file, text) {\r\n    if (!file?.type || !/^image\\/.*$/.test(file.type)) {\r\n      setWrongFileFormat(true);\r\n      return;\r\n    }\r\n    const preview = URL.createObjectURL(file);\r\n    setWrongFileFormat(false);\r\n    setImage({ file, preview });\r\n  }\r\n\r\n  function handleClear() {\r\n    setImage(null);\r\n  }\r\n\r\n  async function convertIntoBase64(imageFile) {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.onloadend = function () {\r\n        resolve(reader.result);\r\n      };\r\n      reader.readAsDataURL(imageFile);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Button variant='primary' onClick={handleShow} className='mt-3 w-100'>\r\n        Edit\r\n      </Button>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Edit avatar</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {image ? (\r\n            <div className='d-flex justify-content-center'>\r\n              <img width='200' src={image.preview} alt='Avatar' />\r\n            </div>\r\n          ) : (\r\n            <div className='mb-2'>\r\n              <StyledDropZone onDrop={handleUpload} accept='image/*' />\r\n            </div>\r\n          )}\r\n          {wrongFileFormat && (\r\n            <small className='text-danger'>\r\n              Invalid file format. Please, upload an image (.png, .jpg, etc)\r\n            </small>\r\n          )}\r\n        </Modal.Body>\r\n        <Modal.Footer className='d-flex'>\r\n          <Button\r\n            variant='danger'\r\n            className='me-auto'\r\n            onClick={handleClearAvatar}\r\n          >\r\n            Clear avatar\r\n          </Button>\r\n          {image && (\r\n            <Button variant='secondary' onClick={handleClear}>\r\n              <FontAwesomeIcon icon={faUndo} />\r\n            </Button>\r\n          )}\r\n          <Button\r\n            variant='primary'\r\n            disabled={!image || !isRequestCompleted}\r\n            onClick={handleConfirm}\r\n          >\r\n            {isRequestCompleted ? (\r\n              'Confirm'\r\n            ) : (\r\n              <Spinner animation='border' as='span' size='sm' />\r\n            )}\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n}\r\n","import { React, useState, useEffect, useContext, Fragment } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport defaultAvatar from '../static/img/default-avatar.png';\r\nimport CurrentUserContext from '../static/js/CurrentUserContext';\r\nimport EditAvatarModal from './EditAvatarModal';\r\n\r\nexport default function Avatar(props) {\r\n  const { currentUser } = useContext(CurrentUserContext);\r\n  const [canEdit, setCanEdit] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setCanEdit(currentUser?.login === props.user.login);\r\n  }, [props, currentUser]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card className='mb-4'>\r\n        <Card.Body>\r\n          <Card.Img src={props.src || defaultAvatar} variant='top'></Card.Img>\r\n          {canEdit && <EditAvatarModal />}\r\n        </Card.Body>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n}\r\n","import { React, useState, useContext, useEffect } from 'react';\r\nimport { Button, FormControl, Spinner } from 'react-bootstrap';\r\nimport CurrentUserContext from '../static/js/CurrentUserContext';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { createPost } from '../static/js/api-calls';\r\nimport NotificationContext from '../static/js/NotificationContext';\r\n\r\nexport default function AddPost(props) {\r\n  const [input, setInput] = useState('');\r\n  const [placeholder, setPlaceholder] = useState(\"What's new?\");\r\n  const { currentUser, refreshCurrentUser } = useContext(CurrentUserContext);\r\n  const history = useHistory();\r\n  const [isRequestCompleted, setIsRequestCompleted] = useState(true);\r\n  const [inputHeight, setInputHeight] = useState(36);\r\n\r\n  const { showNotification } = useContext(NotificationContext);\r\n\r\n  function handleClick() {\r\n    if (!input.trim()) return;\r\n\r\n    setIsRequestCompleted(false);\r\n    createPost(input.trim(), currentUser, props.user.login)\r\n      .then(response => {\r\n        if (currentUser?.login === props.user.login) {\r\n          refreshCurrentUser();\r\n          return;\r\n        }\r\n        history.push('/users/' + props.user.login);\r\n      })\r\n      .catch(error => {\r\n        refreshCurrentUser();\r\n        if (error.response?.status === 401) {\r\n          showNotification(401);\r\n          history.push('/signin');\r\n        } else if (error.response?.status === 403) showNotification(403);\r\n        else showNotification();\r\n      })\r\n      .finally(() => {\r\n        setIsRequestCompleted(true);\r\n        setInput('');\r\n      });\r\n  }\r\n\r\n  function handleChange(event) {\r\n    if (inputHeight < event.target.scrollHeight) {\r\n      setInputHeight(inputHeight + 24);\r\n    } else if (inputHeight > event.target.scrollHeight) {\r\n      setInputHeight(inputHeight - 24);\r\n    }\r\n\r\n    setInput(event.target.value);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const login = getLoginFromPath();\r\n\r\n    if (!currentUser) {\r\n      setPlaceholder('Please, authorize before leaving posts');\r\n    } else if (login !== currentUser.login) {\r\n      setPlaceholder(`Leave a post for @${login}`);\r\n    } else if (login === currentUser.login) {\r\n      setPlaceholder(\"What's new?\");\r\n    }\r\n  }, [props]);\r\n\r\n  function getLoginFromPath() {\r\n    const path = history.location.pathname;\r\n    const pathArray = path.split('/');\r\n    return pathArray[pathArray.length - 1];\r\n  }\r\n\r\n  return (\r\n    <div className='my-4 d-flex'>\r\n      <FormControl\r\n        as='textarea'\r\n        style={{\r\n          height: `${inputHeight}px`,\r\n          resize: 'none',\r\n          overflow: 'hidden',\r\n        }}\r\n        placeholder={placeholder}\r\n        onChange={handleChange}\r\n        value={input}\r\n        disabled={!currentUser}\r\n      />\r\n      <Button\r\n        onClick={handleClick}\r\n        className='ms-3 align-self-end'\r\n        disabled={!currentUser || !isRequestCompleted}\r\n      >\r\n        {isRequestCompleted ? (\r\n          'Post'\r\n        ) : (\r\n          <Spinner animation='border' as='span' size='sm' />\r\n        )}\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport defaultAvatar from '../static/img/default-avatar.png';\r\n\r\nexport default function AvatarSmall(props) {\r\n  return (\r\n    <img\r\n      src={props.src || defaultAvatar}\r\n      alt='Avatar'\r\n      width='50'\r\n      height='50'\r\n      style={{ borderRadius: '50%', cursor: 'pointer', objectFit: 'cover' }}\r\n      onClick={props.onClick}\r\n    />\r\n  );\r\n}\r\n","import { React, useEffect, useState, useContext } from 'react';\r\nimport { Card, CloseButton, Spinner } from 'react-bootstrap';\r\nimport defaultAvatar from '../static/img/default-avatar.png';\r\nimport AvatarSmall from './AvatarSmall';\r\nimport Moment from 'react-moment';\r\nimport 'moment-timezone';\r\nimport moment from 'moment-timezone';\r\nimport 'moment/locale/ru';\r\nimport { useHistory } from 'react-router-dom';\r\nimport CurrentUserContext from '../static/js/CurrentUserContext';\r\nimport NotificationContext from '../static/js/NotificationContext';\r\nimport { removePost } from '../static/js/api-calls';\r\n\r\nexport default function Post(props) {\r\n  const history = useHistory();\r\n  const [canEdit, setCanEdit] = useState(false);\r\n  const { currentUser, refreshCurrentUser } = useContext(CurrentUserContext);\r\n  const [showRemoveConfirmation, setShowRemoveConfirmation] = useState(false);\r\n  const { showNotification } = useContext(NotificationContext);\r\n  const [isRequestCompleted, setIsRequestCompleted] = useState(true);\r\n\r\n  moment().locale('ru');\r\n\r\n  function handleRedirect() {\r\n    history.push('/users/' + props.post.login);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setCanEdit(currentUser?.login === getLoginFromPath());\r\n  }, [props, currentUser]);\r\n\r\n  function handleRemovePost() {\r\n    if (!showRemoveConfirmation) {\r\n      setShowRemoveConfirmation(true);\r\n      setTimeout(() => {\r\n        setShowRemoveConfirmation(false);\r\n      }, 3000);\r\n      return;\r\n    }\r\n\r\n    setShowRemoveConfirmation(false);\r\n    setIsRequestCompleted(false);\r\n    removePost(props.post._id, currentUser.login)\r\n      .catch(error => {\r\n        if (error.response?.status === 401) {\r\n          showNotification(401);\r\n          history.push('/signin');\r\n        } else if (error.response?.status === 403) showNotification(403);\r\n        else showNotification();\r\n      })\r\n      .finally(() => {\r\n        refreshCurrentUser(props.postsLimit);\r\n        props.setHasMoreData(true);\r\n        setIsRequestCompleted(true);\r\n      });\r\n  }\r\n\r\n  function getLoginFromPath() {\r\n    const path = history.location.pathname;\r\n    const pathArray = path.split('/');\r\n    return pathArray[pathArray.length - 1];\r\n  }\r\n\r\n  return (\r\n    <Card className='mb-4'>\r\n      <Card.Body className='d-flex flex-wrap'>\r\n        <AvatarSmall\r\n          src={props.post.avatarBase64 ?? defaultAvatar}\r\n          onClick={handleRedirect}\r\n        />\r\n        <div className='d-flex flex-column'>\r\n          <p\r\n            className='ms-3 mb-0'\r\n            onClick={handleRedirect}\r\n            style={{ cursor: 'pointer' }}\r\n          >\r\n            {props.post.name} {props.post.surname}\r\n          </p>\r\n          <small className='ms-3 text-muted'>\r\n            <Moment fromNowDuring={1000 * 60 * 60 * 24 * 2} format='lll'>\r\n              {props.post.added}\r\n            </Moment>\r\n          </small>\r\n        </div>\r\n        <div className='ms-auto d-flex'>\r\n          {!isRequestCompleted && (\r\n            <Spinner\r\n              className='mt-1'\r\n              animation='border'\r\n              as='span'\r\n              variant='primary'\r\n              size='sm'\r\n            />\r\n          )}\r\n          {showRemoveConfirmation && (\r\n            <small\r\n              className='text-danger me-2'\r\n              style={{ cursor: 'pointer' }}\r\n              onClick={handleRemovePost}\r\n            >\r\n              Delete?\r\n            </small>\r\n          )}\r\n          {canEdit && isRequestCompleted && (\r\n            <CloseButton onClick={handleRemovePost} />\r\n          )}\r\n        </div>\r\n        <div className='w-100 mt-2'></div>\r\n        <Card.Text style={{ whiteSpace: 'pre-line' }}>\r\n          {props.post.body}\r\n        </Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import { React } from 'react';\r\nimport AddPost from './AddPost';\r\nimport Post from './Post';\r\n\r\nexport default function PostContainer(props) {\r\n  return (\r\n    <div className='mt-4'>\r\n      <AddPost user={props.user} />\r\n      {props.posts?.map(item => (\r\n        <Post\r\n          key={item._id}\r\n          post={item}\r\n          postsLimit={props.postsLimit}\r\n          setHasMoreData={props.setHasMoreData}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import { Fragment, React, useState, useContext } from 'react';\r\nimport { Modal, Button, Form, Spinner } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\r\nimport { changeName } from '../static/js/api-calls';\r\nimport { nameIsCorrect as isCorrect } from '../static/js/validators';\r\nimport CurrentUserContext from '../static/js/CurrentUserContext';\r\nimport NotificationContext from '../static/js/NotificationContext';\r\n\r\nexport default function EditNameModal(props) {\r\n  const [show, setShow] = useState(false);\r\n  const [name, setName] = useState('');\r\n  const [surname, setSurname] = useState('');\r\n\r\n  const [wrongName, setWrongName] = useState(false);\r\n  const [wrongSurname, setWrongSurname] = useState(false);\r\n\r\n  const { refreshCurrentUser } = useContext(CurrentUserContext);\r\n  const { showNotification } = useContext(NotificationContext);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const [isRequestCompleted, setIsRequestCompleted] = useState(true);\r\n\r\n  function handleConfirm() {\r\n    if (allIsCorrect()) {\r\n      setIsRequestCompleted(false);\r\n      changeName(name, surname, props.user.login)\r\n        .then(response => {\r\n          handleClose();\r\n        })\r\n        .catch(error => {\r\n          if (error.response?.status === 403) showNotification(403);\r\n          else if (error.response?.status === 401) showNotification(401);\r\n          else showNotification();\r\n        })\r\n        .finally(() => {\r\n          setIsRequestCompleted(true);\r\n          refreshCurrentUser();\r\n          handleClose();\r\n        });\r\n    }\r\n  }\r\n\r\n  function allIsCorrect() {\r\n    const nameIsCorrect = isCorrect(name);\r\n    const surnameIsCorrect = isCorrect(surname);\r\n\r\n    setWrongName(!nameIsCorrect);\r\n    setWrongSurname(!surnameIsCorrect);\r\n\r\n    return nameIsCorrect && surnameIsCorrect;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <FontAwesomeIcon\r\n        icon={faEdit}\r\n        size='sm'\r\n        className='text-primary'\r\n        onClick={handleShow}\r\n        style={{ cursor: 'pointer' }}\r\n      />\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Edit name</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group className='mb-3 mt-0'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                onChange={e => setName(e.target.value)}\r\n                placeholder='Name'\r\n              />\r\n              {wrongName && (\r\n                <Form.Text className='text-danger'>\r\n                  Cannot be empty, may contain only letters and dash\r\n                </Form.Text>\r\n              )}\r\n            </Form.Group>\r\n            <Form.Group className='mb-3'>\r\n              <Form.Label>Last name</Form.Label>\r\n              <Form.Control\r\n                onChange={e => setSurname(e.target.value)}\r\n                placeholder='Last name'\r\n              />\r\n              {wrongSurname && (\r\n                <Form.Text className='text-danger'>\r\n                  Cannot be empty, may contain only letters and dash\r\n                </Form.Text>\r\n              )}\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant='secondary' onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            variant='primary'\r\n            onClick={handleConfirm}\r\n            disabled={!isRequestCompleted}\r\n          >\r\n            {isRequestCompleted ? (\r\n              'Confirm'\r\n            ) : (\r\n              <Spinner animation='border' as='span' size='sm' />\r\n            )}\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n}\r\n","import { Fragment, React, useState, useContext } from 'react';\r\nimport { Modal, Button, Form, Spinner } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\r\nimport { changeAbout } from '../static/js/api-calls';\r\nimport CurrentUserContext from '../static/js/CurrentUserContext';\r\nimport NotificationContext from '../static/js/NotificationContext';\r\n\r\nexport default function EditAboutModal(props) {\r\n  const [show, setShow] = useState(false);\r\n  const [about, setAbout] = useState('');\r\n  const { refreshCurrentUser } = useContext(CurrentUserContext);\r\n  const { showNotification } = useContext(NotificationContext);\r\n  const [isRequestCompleted, setIsRequestCompleted] = useState(true);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  async function handleConfirm() {\r\n    setIsRequestCompleted(false);\r\n    changeAbout(about.trim(), props.user.login)\r\n      .then(response => {\r\n        handleClose();\r\n      })\r\n      .catch(error => {\r\n        if (error.response?.status === 403) showNotification(403);\r\n        else if (error.response?.status === 401) {\r\n          showNotification(401);\r\n        } else showNotification();\r\n      })\r\n      .finally(() => {\r\n        setIsRequestCompleted(true);\r\n        refreshCurrentUser();\r\n        handleClose();\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <FontAwesomeIcon\r\n        icon={faEdit}\r\n        size='xs'\r\n        className='text-primary'\r\n        onClick={handleShow}\r\n        style={{ cursor: 'pointer' }}\r\n      />\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Edit status</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Control\r\n              onChange={e => setAbout(e.target.value)}\r\n              placeholder='Status'\r\n              autoFocus\r\n            />\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant='secondary' onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            variant='primary'\r\n            onClick={handleConfirm}\r\n            disabled={!isRequestCompleted}\r\n          >\r\n            {isRequestCompleted ? (\r\n              'Confirm'\r\n            ) : (\r\n              <Spinner animation='border' as='span' size='sm' />\r\n            )}\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n}\r\n","import { React, useContext, useEffect, useState } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport CurrentUserContext from '../static/js/CurrentUserContext';\r\nimport EditNameModal from './EditNameModal';\r\nimport EditAboutModal from './EditAboutModal';\r\n\r\nexport default function UserInfo(props) {\r\n  const { currentUser } = useContext(CurrentUserContext);\r\n  const [canEdit, setCanEdit] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setCanEdit(currentUser?.login === props.user.login);\r\n  }, [props, currentUser]);\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Body className='d-flex flex-wrap overflow-hidden'>\r\n        <Card.Title className='mb-1'>\r\n          {props.user.name} {props.user.surname}\r\n        </Card.Title>\r\n        {canEdit && (\r\n          <div className='ms-2 align-self-start'>\r\n            <EditNameModal user={props.user} />\r\n          </div>\r\n        )}\r\n\r\n        <div className='w-100 mb-2'></div>\r\n\r\n        <Card.Text className={'mb-0'}>\r\n          {props.user.about || (canEdit && 'Set status...')}\r\n        </Card.Text>\r\n        {canEdit && (\r\n          <div className='ms-2 align-self-start'>\r\n            <EditAboutModal user={props.user} />\r\n          </div>\r\n        )}\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import { React, Fragment, useEffect, useState, useContext } from 'react';\r\nimport { Col, Spinner } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Avatar from '../components/Avatar';\r\nimport PostContainer from '../components/PostContainer';\r\nimport UserInfo from '../components/UserInfo';\r\nimport { getUser } from '../static/js/api-calls';\r\nimport CurrentUserContext from '../static/js/CurrentUserContext';\r\nimport NotificationContext from '../static/js/NotificationContext';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\n\r\nexport default function PersonalPage(props) {\r\n  const [user, setUser] = useState(null);\r\n  const { showNotification } = useContext(NotificationContext);\r\n  const { currentUser, refreshCurrentUser } = useContext(CurrentUserContext);\r\n  const [requestIsCompleted, setRequestIsCompleted] = useState(false);\r\n  const history = useHistory();\r\n  const [limit, setLimit] = useState(10);\r\n  const [hasMoreData, setHasMoreData] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setLimit(10);\r\n    const login = getLoginFromPath();\r\n\r\n    if (login.toLowerCase() === 'me' && currentUser) {\r\n      history.replace('/users/' + currentUser.login);\r\n      return;\r\n    }\r\n\r\n    getUser(login, limit)\r\n      .then(response => {\r\n        setHasMoreData(\r\n          response.data.totalPostsLength !== response.data.posts.length\r\n        );\r\n        setUser(response.data);\r\n      })\r\n      .catch(error => {\r\n        if (error.response?.status === 401) {\r\n          showNotification(401);\r\n          history.push('/signin');\r\n        } else if (error.response?.status === 404) {\r\n          showNotification(null, 'User not found.', 'Error');\r\n        } else showNotification();\r\n      })\r\n      .finally(() => {\r\n        setRequestIsCompleted(true);\r\n      });\r\n\r\n    function getLoginFromPath() {\r\n      const path = props.location.pathname;\r\n      const pathArray = path.split('/');\r\n      return pathArray[pathArray.length - 1];\r\n    }\r\n  }, [props.location, currentUser]);\r\n\r\n  function handleLoadMore() {\r\n    loadUser(limit + 10, hasMoreData);\r\n    setLimit(limit + 10);\r\n  }\r\n\r\n  function loadUser(limit, hasMoreData) {\r\n    if (!hasMoreData) return;\r\n\r\n    getUser(user.login, limit)\r\n      .then(response => {\r\n        setHasMoreData(user?.posts?.length !== response.data?.posts?.length);\r\n        setUser(response.data);\r\n      })\r\n      .catch(error => {\r\n        setHasMoreData(false);\r\n        showNotification();\r\n      });\r\n  }\r\n\r\n  if (user)\r\n    return (\r\n      <Fragment>\r\n        <Col sm={4} md={3}>\r\n          <Avatar src={user.avatarBase64} user={user} />\r\n        </Col>\r\n        <Col sm={8} md={7}>\r\n          <UserInfo user={user} />\r\n          <PostContainer\r\n            user={user}\r\n            posts={user.posts}\r\n            postsLimit={limit}\r\n            setHasMoreData={setHasMoreData}\r\n          />\r\n          <InfiniteScroll\r\n            dataLength={user.posts.length}\r\n            next={handleLoadMore}\r\n            hasMore={hasMoreData}\r\n            scrollThreshold={0.82}\r\n            loader={\r\n              <div className='d-flex mt-3 mb-5 justify-content-center'>\r\n                <Spinner animation='border' variant='primary' />\r\n              </div>\r\n            }\r\n          />\r\n        </Col>\r\n      </Fragment>\r\n    );\r\n  else if (!requestIsCompleted)\r\n    return (\r\n      <Col className='d-flex justify-content-center'>\r\n        <Spinner animation='border' variant='primary' />\r\n      </Col>\r\n    );\r\n  else return null;\r\n}\r\n","import { React, useContext } from 'react';\r\nimport { Col, Nav } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport ConfirmModal from './ConfirmModal';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { signOut } from '../static/js/api-calls';\r\nimport CurrentUserContext from '../static/js/CurrentUserContext';\r\nimport '../static/css/shared.css';\r\n\r\nexport default function Sidebar() {\r\n  const history = useHistory();\r\n  const { currentUser, refreshCurrentUser } = useContext(CurrentUserContext);\r\n\r\n  async function handleSignOut() {\r\n    await signOut();\r\n    refreshCurrentUser();\r\n    history.push('/signin');\r\n  }\r\n\r\n  return (\r\n    <Col sm={3} md={2} className='hide-on-sm'>\r\n      <Nav className='flex-column' variant=''>\r\n        <Nav.Item>\r\n          <LinkContainer to='/me'>\r\n            <Nav.Link>My page</Nav.Link>\r\n          </LinkContainer>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <LinkContainer to='/users'>\r\n            <Nav.Link>Users</Nav.Link>\r\n          </LinkContainer>\r\n        </Nav.Item>\r\n        {currentUser ? (\r\n          <Nav.Item className='mt-2'>\r\n            <div className='d-flex'>\r\n              <ConfirmModal\r\n                openButtonText='Sign Out'\r\n                text='Are you sure you want to leave your account?'\r\n                confirmAction={handleSignOut}\r\n                buttonVariant={'link'}\r\n                buttonStyle={{\r\n                  textDecoration: 'none',\r\n                  padding: '1rem',\r\n                  margin: '0',\r\n                  outline: 'none !important',\r\n                }}\r\n              />\r\n            </div>\r\n          </Nav.Item>\r\n        ) : (\r\n          <Nav.Item className='mt-3'>\r\n            <LinkContainer to='/signin'>\r\n              <Nav.Link>Sign In</Nav.Link>\r\n            </LinkContainer>\r\n          </Nav.Item>\r\n        )}\r\n      </Nav>\r\n    </Col>\r\n  );\r\n}\r\n","import { React, useState, useContext } from 'react';\r\nimport { Card, Form, Button, Spinner } from 'react-bootstrap';\r\nimport { getUser, signIn } from '../static/js/api-calls';\r\nimport { useHistory } from 'react-router-dom';\r\nimport CurrentUserContext from '../static/js/CurrentUserContext';\r\nimport NotificationContext from '../static/js/NotificationContext';\r\n\r\nexport default function LoginForm() {\r\n  const history = useHistory();\r\n\r\n  const [login, setLogin] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [wrongCredentials, setWrongCredentials] = useState(false);\r\n  const [isRequestCompleted, setIsRequestCompleted] = useState(true);\r\n\r\n  const { refreshCurrentUser } = useContext(CurrentUserContext);\r\n  const { showNotification } = useContext(NotificationContext);\r\n\r\n  function handleClick() {\r\n    setIsRequestCompleted(false);\r\n    signIn(login, password)\r\n      .then(response => {\r\n        getUser(login).then(response => {\r\n          setIsRequestCompleted(true);\r\n          refreshCurrentUser();\r\n          history.push('/me');\r\n        });\r\n      })\r\n      .catch(error => {\r\n        setIsRequestCompleted(true);\r\n        if (error.response?.status === 404) {\r\n          setWrongCredentials(true);\r\n        } else {\r\n          showNotification();\r\n        }\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Card className='mb-4'>\r\n      <Card.Body>\r\n        <Card.Title className='mb-2'>Sign In</Card.Title>\r\n        {wrongCredentials && (\r\n          <Form.Text className='text-danger'>\r\n            Wrong login or password.\r\n          </Form.Text>\r\n        )}\r\n        <Form className='mt-3'>\r\n          <Form.Control\r\n            placeholder='Login'\r\n            className='mb-3'\r\n            onChange={e => setLogin(e.target.value)}\r\n          />\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Password'\r\n            className='mb-3'\r\n            onChange={e => setPassword(e.target.value)}\r\n          />\r\n          <Button\r\n            variant='primary'\r\n            onClick={handleClick}\r\n            disabled={!isRequestCompleted}\r\n          >\r\n            {isRequestCompleted ? (\r\n              'Submit'\r\n            ) : (\r\n              <Spinner animation='border' as='span' size='sm' />\r\n            )}\r\n          </Button>\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Card, Button } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nexport default function LoginInfo() {\r\n  return (\r\n    <Card>\r\n      <Card.Body>\r\n        <Card.Title>To use VK Next please sign in.</Card.Title>\r\n        <LinkContainer to='/signin'>\r\n          <div>\r\n            <Button className='mt-1'>Sign In</Button>\r\n          </div>\r\n        </LinkContainer>\r\n        <Card.Title className='mt-4'>Do not have an account?</Card.Title>\r\n        <LinkContainer to='/signup'>\r\n          <div>\r\n            <Button className='mt-1'>Sign Up</Button>\r\n          </div>\r\n        </LinkContainer>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import { React, Fragment, useContext } from 'react';\r\nimport { Col } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport LoginForm from '../components/LoginForm';\r\nimport LoginInfo from '../components/LoginInfo';\r\nimport CurrentUserContext from '../static/js/CurrentUserContext';\r\n\r\nexport default function SignIn() {\r\n  const { currentUser } = useContext(CurrentUserContext);\r\n\r\n  if (currentUser) {\r\n    return <Redirect to={'/me'} />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Col sm={6} md={5} lg={4}>\r\n        <LoginForm />\r\n      </Col>\r\n      <Col sm={6} md={4} lg={5}>\r\n        <LoginInfo />\r\n      </Col>\r\n    </Fragment>\r\n  );\r\n}\r\n","import { React, useState } from 'react';\r\nimport { Card, Form, Button, Spinner } from 'react-bootstrap';\r\nimport { signUp } from '../static/js/api-calls';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as validator from '../static/js/validators';\r\n\r\nexport default function RegistrationForm() {\r\n  const history = useHistory();\r\n\r\n  const [name, setName] = useState('');\r\n  const [surname, setSurname] = useState('');\r\n  const [login, setLogin] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [repeatPassword, setRepeatPassword] = useState('');\r\n\r\n  const [wrongName, setWrongName] = useState(false);\r\n  const [wrongSurname, setWrongSurname] = useState(false);\r\n  const [wrongLogin, setWrongLogin] = useState(false);\r\n  const [wrongPassword, setWrongPassword] = useState(false);\r\n  const [passwordsDontMatch, setPasswordsDontMatch] = useState(false);\r\n\r\n  const [loginIsTaken, setLoginIsTaken] = useState(false);\r\n  const [isRequestCompleted, setIsRequestCompleted] = useState(true);\r\n\r\n  function handleClick() {\r\n    setIsRequestCompleted(false);\r\n    if (allIsCorrect()) {\r\n      signUp({ name, surname, login, password })\r\n        .then(response => {\r\n          history.push('/signin');\r\n        })\r\n        .catch(error => {\r\n          if (error.response?.status === 400) {\r\n            setLoginIsTaken(true);\r\n          }\r\n        })\r\n        .finally(() => {\r\n          setIsRequestCompleted(true);\r\n        });\r\n    }\r\n  }\r\n\r\n  function allIsCorrect() {\r\n    const nameIsCorrect = validator.nameIsCorrect(name);\r\n    const surnameIsCorrect = validator.nameIsCorrect(surname);\r\n    const loginIsCorrect = validator.loginIsCorrect(login);\r\n    const passwordIsCorrect = validator.passwordIsCorrect(password);\r\n    const passwordsMatch = password === repeatPassword;\r\n\r\n    setWrongName(!nameIsCorrect);\r\n    setWrongSurname(!surnameIsCorrect);\r\n    setWrongLogin(!loginIsCorrect);\r\n    setWrongPassword(!passwordIsCorrect);\r\n    setPasswordsDontMatch(!passwordsMatch);\r\n\r\n    return (\r\n      nameIsCorrect &&\r\n      surnameIsCorrect &&\r\n      loginIsCorrect &&\r\n      passwordIsCorrect &&\r\n      passwordsMatch\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Body>\r\n        <Card.Title>Sign Up</Card.Title>\r\n        <Form className='mt-4'>\r\n          <Form.Group className='mb-3'>\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control onChange={e => setName(e.target.value)} />\r\n            {wrongName && (\r\n              <Form.Text className='text-danger'>\r\n                Cannot be empty, may contain only letters and dash\r\n              </Form.Text>\r\n            )}\r\n          </Form.Group>\r\n          <Form.Group className='mb-3'>\r\n            <Form.Label>Last name</Form.Label>\r\n            <Form.Control onChange={e => setSurname(e.target.value)} />\r\n            {wrongSurname && (\r\n              <Form.Text className='text-danger'>\r\n                Cannot be empty, may contain only letters and dash\r\n              </Form.Text>\r\n            )}\r\n          </Form.Group>\r\n          <Form.Group className='mb-3'>\r\n            <Form.Label>Login</Form.Label>\r\n            <Form.Control onChange={e => setLogin(e.target.value)} />\r\n            {wrongLogin && (\r\n              <Form.Text className='text-danger'>\r\n                At least 4 symbols, may contain letters, numbers and dash\r\n              </Form.Text>\r\n            )}\r\n            {loginIsTaken && (\r\n              <Form.Text className='text-danger'>\r\n                This login is already in use\r\n              </Form.Text>\r\n            )}\r\n          </Form.Group>\r\n          <Form.Group className='mb-3'>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              onChange={e => setPassword(e.target.value)}\r\n            />\r\n            {wrongPassword && (\r\n              <Form.Text className='text-danger'>At least 4 symbols</Form.Text>\r\n            )}\r\n          </Form.Group>\r\n          <Form.Group className='mb-3'>\r\n            <Form.Label>Repeat password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              onChange={e => setRepeatPassword(e.target.value)}\r\n            />\r\n            {passwordsDontMatch && (\r\n              <Form.Text className='text-danger'>\r\n                Passwords don't match\r\n              </Form.Text>\r\n            )}\r\n          </Form.Group>\r\n          <Button\r\n            variant='primary'\r\n            onClick={handleClick}\r\n            disabled={!isRequestCompleted}\r\n          >\r\n            {isRequestCompleted ? (\r\n              'Submit'\r\n            ) : (\r\n              <Spinner animation='border' as='span' size='sm' />\r\n            )}\r\n          </Button>\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import { React, Fragment, useContext } from 'react';\r\nimport { Col } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport LoginInfo from '../components/LoginInfo';\r\nimport RegistrationForm from '../components/RegistrationForm';\r\nimport CurrentUserContext from '../static/js/CurrentUserContext';\r\n\r\nexport default function SignUp() {\r\n  const { currentUser } = useContext(CurrentUserContext);\r\n\r\n  if (currentUser) {\r\n    return <Redirect to={'/me'} />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Col sm={6} md={5} lg={4}>\r\n        <RegistrationForm />\r\n      </Col>\r\n      <Col sm={3} md={4} lg={5}>\r\n        <LoginInfo />\r\n      </Col>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport defaultAvatar from '../static/img/default-avatar.png';\r\nimport AvatarSmall from '../components/AvatarSmall';\r\nimport '../static/css/shared.css';\r\n\r\nexport default function UserSmall(props) {\r\n  return (\r\n    <LinkContainer to={'/users/' + props.user.login}>\r\n      <Card className='mb-4 user-small'>\r\n        <Card.Body className='d-flex flex-wrap'>\r\n          <AvatarSmall src={props.user?.avatarBase64 || defaultAvatar} />\r\n          <div className='d-flex flex-column align-self-center'>\r\n            <p className='ms-3 mb-0'>\r\n              {props.user.name} {props.user.surname}\r\n            </p>\r\n            <small className='ms-3'>{props.user.about}</small>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n    </LinkContainer>\r\n  );\r\n}\r\n","import { React, Fragment } from 'react';\r\nimport UserSmall from '../components/UserSmall';\r\n\r\nexport default function UserContainer(props) {\r\n  return (\r\n    <Fragment>\r\n      {props.users.map(user => (\r\n        <UserSmall key={user._id} user={user} />\r\n      ))}\r\n    </Fragment>\r\n  );\r\n}\r\n","import { React, useState } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nexport default function UserSearch(props) {\r\n  const [interval, setInterval] = useState(null);\r\n\r\n  function handleChange(event) {\r\n    if (interval) {\r\n      clearInterval(interval);\r\n      setInterval(null);\r\n    }\r\n\r\n    const currentInterval = setTimeout(() => {\r\n      props.onSearch(event.target.value);\r\n    }, 600);\r\n    setInterval(currentInterval);\r\n  }\r\n\r\n  return (\r\n    <div className='mb-3'>\r\n      <Form.Control placeholder='Search for user...' onChange={handleChange} />\r\n      <Form.Text className='ms-1'>\r\n        Use @ for search by login (e.g. @Quatters) or just type a name\r\n      </Form.Text>\r\n    </div>\r\n  );\r\n}\r\n","import { React, useState, useEffect, useContext } from 'react';\r\nimport UserContainer from '../components/UserContainer';\r\nimport { Col, Spinner } from 'react-bootstrap';\r\nimport { getUsers } from '../static/js/api-calls';\r\nimport NotificationContext from '../static/js/NotificationContext';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport UserSearch from '../components/UserSearch';\r\n\r\nexport default function Users() {\r\n  const [users, setUsers] = useState([]);\r\n  const { showNotification } = useContext(NotificationContext);\r\n  const [limit, setLimit] = useState(10);\r\n  const [hasMoreData, setHasMoreData] = useState(true);\r\n\r\n  useEffect(() => {\r\n    loadUsers(limit, hasMoreData);\r\n  }, []);\r\n\r\n  function loadUsers(limit, hasMoreData) {\r\n    if (!hasMoreData) return;\r\n\r\n    getUsers(limit)\r\n      .then(response => {\r\n        setHasMoreData(response.data.users.length !== response.data.totalUsers);\r\n        setUsers(response.data.users);\r\n      })\r\n      .catch(error => {\r\n        setHasMoreData(false);\r\n        showNotification();\r\n      });\r\n  }\r\n\r\n  function handleLoadMore() {\r\n    loadUsers(limit + 10, hasMoreData);\r\n    setLimit(limit + 10);\r\n  }\r\n\r\n  function handleSearch(query) {\r\n    setHasMoreData(!query);\r\n\r\n    if (!query || query === '') {\r\n      setLimit(10);\r\n      setHasMoreData(true);\r\n      loadUsers(10, true);\r\n      return;\r\n    }\r\n\r\n    getUsers(50, 0, query.trim())\r\n      .then(response => {\r\n        setUsers(response.data.users);\r\n      })\r\n      .catch(error => {\r\n        setHasMoreData(false);\r\n        showNotification();\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Col>\r\n      <UserSearch className='mb-4' onSearch={handleSearch} />\r\n      <UserContainer users={users} />\r\n      <InfiniteScroll\r\n        dataLength={users.length}\r\n        next={handleLoadMore}\r\n        hasMore={hasMoreData}\r\n        scrollThreshold={0.82}\r\n        loader={\r\n          <div className='d-flex mt-3 mb-5 justify-content-center'>\r\n            <Spinner animation='border' variant='primary' />\r\n          </div>\r\n        }\r\n      />\r\n    </Col>\r\n  );\r\n}\r\n","import { React, useState } from 'react';\r\nimport { Toast } from 'react-bootstrap';\r\n\r\nexport default function Notification(props) {\r\n  const [show] = useState(props.show);\r\n\r\n  return (\r\n    <Toast show={props.show || show} onClose={props.toggleShow}>\r\n      <Toast.Header>\r\n        <strong className='me-auto'>{props.headerText}</strong>\r\n      </Toast.Header>\r\n      <Toast.Body>{props.text}</Toast.Body>\r\n    </Toast>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default function Home() {\r\n  return <Redirect to='/signin' />;\r\n}\r\n","import { React, useState, useEffect } from 'react';\nimport {\n  Route,\n  BrowserRouter as Router,\n  Switch,\n  Redirect,\n} from 'react-router-dom';\nimport Header from './components/Header';\nimport PersonalPage from './routes/PersonalPage';\nimport { Container, Row, Spinner, ToastContainer } from 'react-bootstrap';\nimport Sidebar from './components/Sidebar';\nimport SignIn from './routes/SignIn';\nimport SignUp from './routes/SignUp';\nimport Users from './routes/Users';\nimport { getUser } from './static/js/api-calls';\nimport axios from 'axios';\nimport CurrentUserContext from './static/js/CurrentUserContext';\nimport NotificationContext from './static/js/NotificationContext';\nimport Notification from './components/Notification';\nimport Home from './routes/Home';\n\nrequire('dotenv').config();\n\naxios.defaults.withCredentials = true;\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [userRequestCompleted, setUserRequestCompleted] = useState(false);\n  const [notificationShowed, setNotificationShowed] = useState(false);\n  const [notificationText, setNotificationText] = useState('');\n  const [notificationHeader, setNotificationHeader] = useState('');\n\n  useEffect(() => {\n    getUser('me', 10)\n      .then(response => {\n        setCurrentUser(response.data);\n      })\n      .catch(error => {})\n      .finally(() => {\n        setUserRequestCompleted(true);\n      });\n  }, []);\n\n  const refreshCurrentUser = async limit => {\n    limit = limit ?? 10;\n\n    await getUser('me', limit)\n      .then(response => {\n        setCurrentUser(response.data);\n      })\n      .catch(error => {\n        showErrorNotification(error.response?.status);\n        setCurrentUser(null);\n      })\n      .finally(() => {\n        setUserRequestCompleted(true);\n      });\n  };\n\n  const showErrorNotification = (errorCode, message, header) => {\n    if (!errorCode) {\n      if (!message) {\n        setNotificationText('Unknown error.');\n        setNotificationHeader('Error');\n      } else {\n        setNotificationText(message);\n        setNotificationHeader(header);\n      }\n    } else {\n      setNotificationHeader('Error');\n      if (errorCode === 403)\n        setNotificationText('You are not allowed to modify this user.');\n      else if (errorCode === 401)\n        setNotificationText('You are not authorized.');\n    }\n\n    setNotificationShowed(true);\n\n    setTimeout(() => {\n      setNotificationShowed(false);\n    }, 5200);\n  };\n\n  if (!currentUser && !userRequestCompleted)\n    return (\n      <div className='d-flex justify-content-center mt-5 pt-5'>\n        <Spinner animation='border' variant='primary' />\n      </div>\n    );\n\n  return (\n    <Router>\n      <CurrentUserContext.Provider value={{ currentUser, refreshCurrentUser }}>\n        <NotificationContext.Provider\n          value={{ showNotification: showErrorNotification }}\n        >\n          <ToastContainer\n            className='p-4 notification-container position-fixed'\n            style={{ zIndex: '100' }}\n            position='bottom-end'\n          >\n            <Notification\n              headerText={notificationHeader}\n              text={notificationText}\n              show={notificationShowed}\n              toggleShow={() => setNotificationShowed(!notificationShowed)}\n            />\n          </ToastContainer>\n          <Header />\n          <Container className='mt-4'>\n            <Row>\n              <Sidebar />\n              <Switch>\n                <Route exact path='/' component={Home} />\n\n                <Route exact path='/me' component={PersonalPage} />\n                <Route exact path='/users/:login' component={PersonalPage} />\n\n                <Route exact path='/users' component={Users} />\n\n                <Route exact path='/signin' component={SignIn} />\n                <Route exact path='/signup' component={SignUp} />\n              </Switch>\n            </Row>\n          </Container>\n        </NotificationContext.Provider>\n      </CurrentUserContext.Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}